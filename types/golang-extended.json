{
  "$schema": "https://raw.githubusercontent.com/AppThreat/purl4ml/refs/heads/main/schemas/purl-type-extended-definition.schema.json",
  "$id": "https://packageurl.org/types/golang-extended-definition.json",
  "type": "golang",
  "type_name": "Go package",
  "description": "Go packages",
  "uri_compliance": {
    "namespace_encoding": "lowercase",
    "name_encoding": "lowercase",
    "version_encoding": "verbatim",
    "subpath_encoding": "verbatim"
  },
  "repository": {
    "use_repository": true,
    "note": "There is no default package repository; this is implied by the domain in the namespace. The Go module proxy acts as a public default.",
    "supported_repositories": [
      "https://proxy.golang.org"
    ]
  },
  "namespace_definition": {
    "requirement": "required",
    "case_sensitive": false,
    "encoding": "lowercase",
    "native_name": "module path prefix",
    "note": "The namespace consists of all path segments before the final name segment (e.g., for 'a/b/c', the namespace is 'a/b'). It must be lowercased."
  },
  "name_definition": {
    "requirement": "required",
    "case_sensitive": false,
    "encoding": "lowercase",
    "native_name": "package name",
    "note": "The name is the final path segment of the Go package path (e.g., for 'a/b/c', the name is 'c'). It must be lowercased."
  },
  "version_definition": {
    "requirement": "optional",
    "encoding": "verbatim",
    "native_name": "version or commit",
    "note": "The version is optional. It can be a semantic version, pseudo-version, or commit hash. Best practice is to use an immutable commit hash when possible."
  },
  "subpath_definition": {
    "requirement": "optional",
    "encoding": "verbatim",
    "native_name": "subpath",
    "note": "The subpath, represented as the URI fragment, is used to point to a sub-directory inside a package."
  },
  "qualifiers_definition": [],
  "validation_rules": {
    "namespace": {
      "lowercase_required": true,
      "examples_valid": ["github.com/gorilla", "google.golang.org", "golang.org/x"],
      "examples_invalid": ["github.com/Gorilla", "google.golang.org/"]
    },
    "name": {
      "lowercase_required": true,
      "no_spaces": true,
      "examples_valid": ["context", "genproto", "net"],
      "examples_invalid": ["Context", "gen proto"]
    },
    "version": {
      "format": "golang-version",
      "examples_valid": ["234fd47e07d1004f0aed9c", "v1.2.3", "0.0.0-20210101010101-abcdef123456", "latest"],
      "examples_invalid": []
    },
    "subpath": {
      "format": "subpath",
      "examples_valid": ["api", "googleapis/api/annotations"],
      "examples_invalid": ["/api", "api/"]
    }
  },
  "common_patterns": [
    {
      "pattern": "pkg:golang/{namespace}/{name}[@{version}]",
      "description": "Go package with an optional version.",
      "example": "pkg:golang/github.com/gorilla/context@234fd47e07d1004f0aed9c"
    },
    {
      "pattern": "pkg:golang/{namespace}/{name}#{subpath}",
      "description": "Go package with a subpath.",
      "example": "pkg:golang/google.golang.org/genproto#googleapis/api/annotations"
    }
  ],
  "anti_patterns": [
    "pkg:golang/github.com/Gorilla/context@234fd47e07d1004f0aed9c",
    "pkg:golang/github.com/gorilla/Context@234fd47e07d1004f0aed9c",
    "pkg:golang/github.com/gorilla/context#",
    "pkg:golang/context",
    "pkg:golang/"
  ],
  "parsing_decision_tree": {
    "steps": [
      {
        "question": "Are there multiple path segments after 'pkg:golang/'?",
        "yes": "The last segment is the name. All preceding segments form the namespace.",
        "no": "Invalid PURL - must have at least a namespace and a name."
      },
      {
        "question": "Is there a version component?",
        "yes": "Extract everything after @ as version.",
        "no": "No version specified; this is permitted."
      },
      {
        "question": "Is there a subpath (fragment) component?",
        "yes": "Extract everything after # as subpath.",
        "no": "No subpath present."
      }
    ]
  },
  "context": {
    "ecosystem": "Go",
    "package_manager": "Go modules",
    "url_scheme": "pkg",
    "hierarchical_structure": "pkg:golang/{namespace}/{name}[@{version}][#{subpath}]",
    "versioning_system": "Go modules versioning (semantic versions, pseudo-versions, commits).",
    "module_path_convention": "The combination of namespace and name forms the full Go package import path."
  },
  "edge_cases": [
    {
      "case": "Packages without a version",
      "handling": "The version component is optional and can be omitted.",
      "purl_impact": "Allows referencing a package in a version-agnostic way."
    },
    {
      "case": "Pseudo-versions",
      "handling": "Versions can be pseudo-versions based on commit timestamps and hashes.",
      "purl_impact": "Enables precise reference to specific commits."
    },
    {
      "case": "Subpackages within modules",
      "handling": "Use the subpath (fragment) to reference specific subpackages.",
      "purl_impact": "Allows fine-grained reference to parts of a module."
    }
  ],
  "llm_guidance": {
    "do_not_assume": [
      "The version is required.",
      "The namespace and name are case-sensitive."
    ],
    "key_facts_to_remember": [
      "The name is the last path segment; the namespace is everything before it.",
      "Both namespace and name must be lowercase.",
      "Version is optional.",
      "Subpath is optional and is represented by the fragment (#).",
      "There are no qualifiers for the Go PURL type."
    ],
    "common_mistakes_to_avoid": [
      "Using uppercase letters in the namespace or name.",
      "Incorrectly splitting the namespace and name.",
      "Attempting to use a 'repository_url' qualifier."
    ]
  },
  "examples": [
    {
      "purl": "pkg:golang/github.com/gorilla/context@234fd47e07d1004f0aed9c",
      "description": "Gorilla context package with a commit hash."
    },
    {
      "purl": "pkg:golang/google.golang.org/genproto#googleapis/api/annotations",
      "description": "Google protocol buffer generators with a subpath."
    }
  ],
  "incorrect_examples": [
    {
      "purl": "pkg:golang/github.com/Gorilla/context@234fd47e07d1004f0aed9c",
      "description": "Namespace contains uppercase letters, which violates the lowercase requirement.",
      "violation": "namespace_definition requires lowercasing."
    },
    {
      "purl": "pkg:golang/github.com/gorilla/Context@234fd47e07d1004f0aed9c",
      "description": "Name contains uppercase letters, which violates the lowercase requirement.",
      "violation": "name_definition requires lowercasing."
    },
    {
      "purl": "pkg:golang/context",
      "description": "Missing namespace component. Both namespace and name are required.",
      "violation": "namespace_definition.requirement=required"
    }
  ],
  "note": "The current definition predates Go modules and has several practical problems, and in particular it is impossible to determine what is a module and what is a package short of having full access to the source code or making an API call to the Go module proxy.",
  "references": [
    {
      "title": "Go Modules Reference",
      "url": "https://golang.org/ref/mod"
    }
  ],
  "metadata": {
    "last_updated": "2025-08-23"
  }
}